/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * DlgPenyakit.java
 *
 * Created on May 23, 2010, 12:57:16 AM
 */
package simrskhanza;

import base.BaseDialog;
import fungsi.GQuery;
import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author dosen
 */
public final class DlgCariKategoriOperasi extends BaseDialog
{
    private final DefaultTableModel tabMode;
    private sekuel Sequel = new sekuel();
    private validasi Valid = new validasi();
    private Connection koneksi = koneksiDB.condb();
    private PreparedStatement ps;
    private ResultSet rs;

    // Vars ==
    private String kdGroup;
    
    /**
     * Creates new form DlgPenyakit
     *
     * @param parent
     * @param modal
     */
    public DlgCariKategoriOperasi(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        this.setLocation(10, 2);
        
        tabMode = new DefaultTableModel(null, new String[]
        {
            "Kode Kategori", "Nama Kategori", "Tarif"
        })
        {
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false;
            }
        };
        tblGroup.setModel(tabMode);
        //tbPenyakit.setDefaultRenderer(Object.class, new WarnaTable(panelJudul.getBackground(),tbPenyakit.getBackground()));
        tblGroup.setPreferredScrollableViewportSize(new Dimension(500, 500));
        tblGroup.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 2; i++)
        {
            TableColumn column = tblGroup.getColumnModel().getColumn(i);
            if (i == 0)
            {
                column.setPreferredWidth(150);
            }
            else if (i == 1)
            {
                column.setPreferredWidth(500);
            }
            else if (i == 2)
            {
                column.setPreferredWidth(200);
            }
        }
        
        tblGroup.setDefaultRenderer(Object.class, new WarnaTable());
        txtCari.setDocument(new batasInput((byte) 100).getKata(txtCari));

        if (koneksiDB.cariCepat().equals("aktif"))
        {
            txtCari.getDocument().addDocumentListener(new javax.swing.event.DocumentListener()
            {
                @Override
                public void insertUpdate(DocumentEvent e)
                {
                    tampil();
                }

                @Override
                public void removeUpdate(DocumentEvent e)
                {
                    tampil();
                }

                @Override
                public void changedUpdate(DocumentEvent e)
                {
                    tampil();
                }
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tblGroup = new widget.Table();
        panelisi3 = new widget.panelisi();
        label9 = new widget.Label();
        txtCari = new widget.TextBox();
        btnCari = new widget.Button();
        btnAll = new widget.Button();
        label10 = new widget.Label();
        lblCount = new widget.Label();
        btnKeluar = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowActivated(java.awt.event.WindowEvent evt)
            {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Kategori Operasi ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 70, 40))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tblGroup.setAutoCreateRowSorter(true);
        tblGroup.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tblGroup.setName("tblGroup"); // NOI18N
        tblGroup.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tblGroupMouseClicked(evt);
            }
        });
        tblGroup.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                tblGroupKeyPressed(evt);
            }
        });
        Scroll.setViewportView(tblGroup);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        panelisi3.setName("panelisi3"); // NOI18N
        panelisi3.setPreferredSize(new java.awt.Dimension(100, 43));
        panelisi3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 4, 9));

        label9.setText("Key Word :");
        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(68, 23));
        panelisi3.add(label9);

        txtCari.setName("txtCari"); // NOI18N
        txtCari.setPreferredSize(new java.awt.Dimension(312, 23));
        txtCari.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtCariKeyPressed(evt);
            }
        });
        panelisi3.add(txtCari);

        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        btnCari.setMnemonic('1');
        btnCari.setToolTipText("Alt+1");
        btnCari.setName("btnCari"); // NOI18N
        btnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        btnCari.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCariActionPerformed(evt);
            }
        });
        btnCari.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btnCariKeyPressed(evt);
            }
        });
        panelisi3.add(btnCari);

        btnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        btnAll.setMnemonic('2');
        btnAll.setToolTipText("2Alt+2");
        btnAll.setName("btnAll"); // NOI18N
        btnAll.setPreferredSize(new java.awt.Dimension(28, 23));
        btnAll.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAllActionPerformed(evt);
            }
        });
        btnAll.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btnAllKeyPressed(evt);
            }
        });
        panelisi3.add(btnAll);

        label10.setText("Record :");
        label10.setName("label10"); // NOI18N
        label10.setPreferredSize(new java.awt.Dimension(60, 23));
        panelisi3.add(label10);

        lblCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCount.setText("0");
        lblCount.setName("lblCount"); // NOI18N
        lblCount.setPreferredSize(new java.awt.Dimension(50, 23));
        panelisi3.add(lblCount);

        btnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        btnKeluar.setMnemonic('4');
        btnKeluar.setToolTipText("Alt+4");
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.setPreferredSize(new java.awt.Dimension(28, 23));
        btnKeluar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnKeluarActionPerformed(evt);
            }
        });
        panelisi3.add(btnKeluar);

        internalFrame1.add(panelisi3, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            btnCariActionPerformed(null);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN)
        {
            btnCari.requestFocus();
        }
        else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP)
        {
            btnKeluar.requestFocus();
        }
        else if (evt.getKeyCode() == KeyEvent.VK_UP)
        {
            tblGroup.requestFocus();
        }
}//GEN-LAST:event_txtCariKeyPressed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        tampil();
}//GEN-LAST:event_btnCariActionPerformed

    private void btnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE)
        {
            btnCariActionPerformed(null);
        }
        else
        {
            Valid.pindah(evt, txtCari, btnAll);
        }
}//GEN-LAST:event_btnCariKeyPressed

    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        txtCari.setText("");
        tampil();
}//GEN-LAST:event_btnAllActionPerformed

    private void btnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAllKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE)
        {
            btnAllActionPerformed(null);
        }
        else
        {
            Valid.pindah(evt, btnCari, txtCari);
        }
}//GEN-LAST:event_btnAllKeyPressed

    private void tblGroupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGroupMouseClicked
        if (tabMode.getRowCount() != 0)
        {
            if (evt.getClickCount() == 2)
            {
                dispose();
            }
        }
}//GEN-LAST:event_tblGroupMouseClicked

    private void tblGroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblGroupKeyPressed
        if (tabMode.getRowCount() != 0)
        {
            if (evt.getKeyCode() == KeyEvent.VK_SPACE)
            {
                dispose();
            }
            else if (evt.getKeyCode() == KeyEvent.VK_SHIFT)
            {
                txtCari.setText("");
                txtCari.requestFocus();
            }
        }
}//GEN-LAST:event_tblGroupKeyPressed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        emptTeks();
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //tampil();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(() -> 
                {
                    DlgCariKategoriOperasi dialog = new DlgCariKategoriOperasi(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter()
                    {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e)
                        {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.ScrollPane Scroll;
    private widget.Button btnAll;
    private widget.Button btnCari;
    private widget.Button btnKeluar;
    private widget.InternalFrame internalFrame1;
    private widget.Label label10;
    private widget.Label label9;
    private widget.Label lblCount;
    private widget.panelisi panelisi3;
    private widget.Table tblGroup;
    private widget.TextBox txtCari;
    // End of variables declaration//GEN-END:variables
    
    public void setKdGroup(String kdGroup)
    {
        this.kdGroup = kdGroup;
    }
    
    public void tampil()
    {
        Valid.tabelKosong(tabMode);
        
        new GQuery()
                .a("SELECT * FROM paket_operasi_2")
                .selectWithName()
                .forEach(s -> 
                {
                    tabMode.addRow(new Object[]
                    {
                        s.get("kode_paket"), s.get("nama_paket"), s.get("tarif")
                    });
                });
        
        if (true) return;
        
        try
        {
            ps = koneksi.prepareStatement("select kd_kategori, nm_kategori "
                    + " from operasi_kategori where (kd_kategori like ? OR nm_kategori like ?) AND kd_group = ? order by nm_kategori");
            try
            {
                ps.setString(1, "%" + txtCari.getText().trim() + "%");
                ps.setString(2, "%" + txtCari.getText().trim() + "%");
                ps.setString(3, kdGroup);
                
                rs = ps.executeQuery();
                
                while (rs.next())
                {
                    tabMode.addRow(new Object[]
                    {
                        rs.getString(1), rs.getString(2)
                    });
                }
            }
            catch (Exception e)
            {
                System.out.println(e);
            }
            finally
            {
                if (rs != null)
                {
                    rs.close();
                }
            }
        }
        catch (SQLException e)
        {
            System.out.println("Notifikasi : " + e);
        }
        
        lblCount.setText("" + tabMode.getRowCount());
    }

    public void emptTeks()
    {
        txtCari.requestFocus();
    }

    public JTable getTable()
    {
        return tblGroup;
    }
}
