/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pop;

import fungsi.GQuery;
import fungsi.sekuel;
import fungsi.var;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import simrskhanza.DlgCariDokter;
import simrskhanza.DlgCariDokter2;
import simrskhanza.DlgCariPoli;
import simrskhanza.DlgCariPoli2;
import util.XmlSettings;

/**
 *
 * @author GrT
 */
public class PopKonsul extends javax.swing.JDialog
{
    public DlgCariDokter dokter = new DlgCariDokter(null,false);
    public DlgCariDokter2 dokter2 = new DlgCariDokter2(null,false);
    
    private DlgCariPoli poli = new DlgCariPoli(null,false);
    private DlgCariPoli2 poli2 = new DlgCariPoli2(null,false);
    
    private sekuel sql = new sekuel();
    
    String aktifJadwal, status, noRw;
    
    int parentW, parentH;
    
    /**
     * Creates new form PopKonsul
     * @param parent
     * @param modal
     */
    public PopKonsul(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        
        // Init ==
        aktifJadwal = XmlSettings.getProp("JADWALDOKTERDIREGISTRASI");
        status = "Baru";
        
        // Window Listener
        addWindowListener();
    }
    
    public void setParentSixe(int w, int h)
    {
        parentW = w;
        parentH = h;
    }
    
    public void setData(String noRm, String noRw)
    {
        clearData();
        
        // Get status pasien ==        
        status = new GQuery()
                .a("SELECT if(tgl_daftar = CURDATE(), 'Baru', 'Lama') as daftar")
                .a("FROM pasien")
                .a("WHERE no_rkm_medis = '{no_rm}'")
                .set("no_rm", noRm)
                .getString();
        
        this.noRw = noRw;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        internalFrame = new widget.InternalFrame();
        BtnCloseIn6 = new widget.Button();
        BtnSimpan6 = new widget.Button();
        TDokter = new widget.TextBox();
        jLabel20 = new widget.Label();
        jLabel21 = new widget.Label();
        TPoli = new widget.TextBox();
        TBiaya = new widget.TextBox();
        kddokter = new widget.TextBox();
        BtnDokter = new widget.Button();
        kdpoli = new widget.TextBox();
        BtnUnit = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("KonsulPoli"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        internalFrame.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Konsul Poli ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 70, 40))); // NOI18N
        internalFrame.setWarnaBawah(new java.awt.Color(245, 250, 240));
        internalFrame.setLayout(null);

        BtnCloseIn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cross.png"))); // NOI18N
        BtnCloseIn6.setMnemonic('U');
        BtnCloseIn6.setText("Tutup");
        BtnCloseIn6.setToolTipText("Alt+U");
        BtnCloseIn6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BtnCloseIn6ActionPerformed(evt);
            }
        });
        internalFrame.add(BtnCloseIn6);
        BtnCloseIn6.setBounds(410, 130, 100, 30);

        BtnSimpan6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan6.setMnemonic('S');
        BtnSimpan6.setText("Simpan");
        BtnSimpan6.setToolTipText("Alt+S");
        BtnSimpan6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BtnSimpan6ActionPerformed(evt);
            }
        });
        internalFrame.add(BtnSimpan6);
        BtnSimpan6.setBounds(310, 130, 100, 30);

        TDokter.setEditable(false);
        internalFrame.add(TDokter);
        TDokter.setBounds(200, 40, 280, 23);

        jLabel20.setText("Dr Dituju :");
        internalFrame.add(jLabel20);
        jLabel20.setBounds(10, 40, 77, 23);

        jLabel21.setText("Unit :");
        internalFrame.add(jLabel21);
        jLabel21.setBounds(10, 70, 77, 23);

        TPoli.setEditable(false);
        internalFrame.add(TPoli);
        TPoli.setBounds(160, 70, 210, 23);

        TBiaya.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                TBiayaKeyPressed(evt);
            }
        });
        internalFrame.add(TBiaya);
        TBiaya.setBounds(380, 70, 94, 23);

        kddokter.setHighlighter(null);
        kddokter.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                kddokterKeyPressed(evt);
            }
        });
        internalFrame.add(kddokter);
        kddokter.setBounds(90, 40, 100, 23);

        BtnDokter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/190.png"))); // NOI18N
        BtnDokter.setMnemonic('3');
        BtnDokter.setToolTipText("ALt+3");
        BtnDokter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BtnDokterActionPerformed(evt);
            }
        });
        internalFrame.add(BtnDokter);
        BtnDokter.setBounds(480, 40, 28, 23);

        kdpoli.setHighlighter(null);
        kdpoli.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                kdpoliActionPerformed(evt);
            }
        });
        kdpoli.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                kdpoliKeyPressed(evt);
            }
        });
        internalFrame.add(kdpoli);
        kdpoli.setBounds(90, 70, 66, 23);

        BtnUnit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/190.png"))); // NOI18N
        BtnUnit.setMnemonic('4');
        BtnUnit.setToolTipText("ALt+4");
        BtnUnit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BtnUnitActionPerformed(evt);
            }
        });
        internalFrame.add(BtnUnit);
        BtnUnit.setBounds(480, 70, 28, 23);

        getContentPane().add(internalFrame, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCloseIn6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BtnCloseIn6ActionPerformed
    {//GEN-HEADEREND:event_BtnCloseIn6ActionPerformed
        dispose();
    }//GEN-LAST:event_BtnCloseIn6ActionPerformed

    private void BtnSimpan6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BtnSimpan6ActionPerformed
    {//GEN-HEADEREND:event_BtnSimpan6ActionPerformed
        simpan();
    }//GEN-LAST:event_BtnSimpan6ActionPerformed

    private void TBiayaKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_TBiayaKeyPressed
    {//GEN-HEADEREND:event_TBiayaKeyPressed

    }//GEN-LAST:event_TBiayaKeyPressed

    private void kddokterKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_kddokterKeyPressed
    {//GEN-HEADEREND:event_kddokterKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            BtnDokterActionPerformed(null);
        }
        else
        {
            
        }
    }//GEN-LAST:event_kddokterKeyPressed

    private void BtnDokterActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BtnDokterActionPerformed
    {//GEN-HEADEREND:event_BtnDokterActionPerformed
        var.setform("DlgReg");
        
        if(aktifJadwal.equals("aktif"))
        {
            if(var.getkode().equals("Admin Utama"))
            {
                dokter.isCek();
                dokter.TCari.requestFocus();
                dokter.setSize(parentW - 40, parentH - 40);
                dokter.setLocationRelativeTo(internalFrame);
                dokter.setVisible(true);
            }else
            {
                dokter2.setPoli(TPoli.getText());
                dokter2.isCek();
                dokter2.tampil();
                dokter2.TCari.requestFocus();
                dokter2.setSize(parentW - 40, parentH - 40);
                dokter2.setLocationRelativeTo(internalFrame);
                dokter2.setVisible(true);
            }
        }else
        {
            dokter.isCek();
            dokter.TCari.requestFocus();
            dokter.setSize(parentW - 40, parentH - 40);
            dokter.setLocationRelativeTo(internalFrame);
            dokter.setVisible(true);
        }
    }//GEN-LAST:event_BtnDokterActionPerformed

    private void kdpoliKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_kdpoliKeyPressed
    {//GEN-HEADEREND:event_kdpoliKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            BtnUnitActionPerformed(null);
        }
        else
        {
            
        }
    }//GEN-LAST:event_kdpoliKeyPressed

    private void BtnUnitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BtnUnitActionPerformed
    {//GEN-HEADEREND:event_BtnUnitActionPerformed
        var.setform("DlgReg");

        if(aktifJadwal.equals("aktif"))
        {
            if(var.getkode().equals("Admin Utama"))
            {
                poli.isCek();
                poli.setSize(parentW - 40, parentH - 40);
                poli.setLocationRelativeTo(internalFrame);
                poli.setVisible(true);
            }
            else
            {
                poli2.setDokter(TDokter.getText());
                poli2.isCek();
                poli2.tampil();
                poli2.setSize(parentW - 40, parentH - 40);
                poli2.setLocationRelativeTo(internalFrame);
                poli2.setVisible(true);
            }
        }
        else
        {
            poli.isCek();
            poli.setSize(parentW - 40, parentH - 40);
            poli.setLocationRelativeTo(internalFrame);
            poli.setVisible(true);
        }
    }//GEN-LAST:event_BtnUnitActionPerformed

    private void kdpoliActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_kdpoliActionPerformed
    {//GEN-HEADEREND:event_kdpoliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kdpoliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(PopKonsul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(PopKonsul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(PopKonsul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(PopKonsul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                PopKonsul dialog = new PopKonsul(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnCloseIn6;
    private widget.Button BtnDokter;
    private widget.Button BtnSimpan6;
    private widget.Button BtnUnit;
    private widget.TextBox TBiaya;
    private widget.TextBox TDokter;
    private widget.TextBox TPoli;
    private widget.InternalFrame internalFrame;
    private widget.Label jLabel20;
    private widget.Label jLabel21;
    private widget.TextBox kddokter;
    private widget.TextBox kdpoli;
    // End of variables declaration//GEN-END:variables

    // Functs====
    private void clearData()
    {
        kddokter.setText("");
        TDokter.setText("");
        kdpoli.setText("");
        TPoli.setText("");
        TBiaya.setText("");
    }
    
    private void addWindowListener()
    {
        dokter.addWindowListener(new WindowListener()
        {
            @Override
            public void windowOpened(WindowEvent e)
            {;
            }

            @Override
            public void windowClosing(WindowEvent e)
            {
            }

            @Override
            public void windowClosed(WindowEvent e)
            {
                if (var.getform().equals("DlgReg"))
                {
                    if (dokter.getTable().getSelectedRow() != -1)
                    {
                        kddokter.setText(dokter.getTable().getValueAt(dokter.getTable().getSelectedRow(), 0).toString());
                        TDokter.setText(dokter.getTable().getValueAt(dokter.getTable().getSelectedRow(), 1).toString());

                        kddokter.requestFocus();
                    }
                }
            }

            @Override
            public void windowIconified(WindowEvent e)
            {
            }

            @Override
            public void windowDeiconified(WindowEvent e)
            {
            }

            @Override
            public void windowActivated(WindowEvent e)
            {
            }

            @Override
            public void windowDeactivated(WindowEvent e)
            {
            }
        });

        dokter2.addWindowListener(new WindowListener()
        {
            @Override
            public void windowOpened(WindowEvent e)
            {;
            }

            @Override
            public void windowClosing(WindowEvent e)
            {
            }

            @Override
            public void windowClosed(WindowEvent e)
            {
                if (var.getform().equals("DlgReg"))
                {
                    if (dokter2.getTable().getSelectedRow() != -1)
                    {
                        kddokter.setText(dokter2.getTable().getValueAt(dokter2.getTable().getSelectedRow(), 0).toString());
                        TDokter.setText(dokter2.getTable().getValueAt(dokter2.getTable().getSelectedRow(), 1).toString());

                        kddokter.requestFocus();
                    }
                }
            }

            @Override
            public void windowIconified(WindowEvent e)
            {
            }

            @Override
            public void windowDeiconified(WindowEvent e)
            {
            }

            @Override
            public void windowActivated(WindowEvent e)
            {
            }

            @Override
            public void windowDeactivated(WindowEvent e)
            {
            }
        });

        poli.addWindowListener(new WindowListener()
        {
            @Override
            public void windowOpened(WindowEvent e)
            {
            }

            @Override
            public void windowClosing(WindowEvent e)
            {
            }

            @Override
            public void windowClosed(WindowEvent e)
            {
                if (var.getform().equals("DlgReg"))
                {
                    if (poli.getTable().getSelectedRow() != -1)
                    {
                        kdpoli.setText(poli.getTable().getValueAt(poli.getTable().getSelectedRow(), 0).toString());
                        TPoli.setText(poli.getTable().getValueAt(poli.getTable().getSelectedRow(), 1).toString());
                        
                        switch (status)
                        {
                            case "Baru":
                                TBiaya.setText(poli.getTable().getValueAt(poli.getTable().getSelectedRow(), 2).toString());
                                break;
                            case "Lama":
                                TBiaya.setText(poli.getTable().getValueAt(poli.getTable().getSelectedRow(), 3).toString());
                                break;
                            default:
                                TBiaya.setText(poli.getTable().getValueAt(poli.getTable().getSelectedRow(), 2).toString());
                                break;
                        }

                        kdpoli.requestFocus();
                    }
                }
            }

            @Override
            public void windowIconified(WindowEvent e)
            {
            }

            @Override
            public void windowDeiconified(WindowEvent e)
            {
            }

            @Override
            public void windowActivated(WindowEvent e)
            {
            }

            @Override
            public void windowDeactivated(WindowEvent e)
            {
            }
        });

        poli2.addWindowListener(new WindowListener()
        {
            @Override
            public void windowOpened(WindowEvent e)
            {
            }

            @Override
            public void windowClosing(WindowEvent e)
            {
            }

            @Override
            public void windowClosed(WindowEvent e)
            {
                if (var.getform().equals("DlgReg"))
                {
                    if (poli2.getTable().getSelectedRow() != -1)
                    {
                        kdpoli.setText(poli2.getTable().getValueAt(poli2.getTable().getSelectedRow(), 0).toString());
                        TPoli.setText(poli2.getTable().getValueAt(poli2.getTable().getSelectedRow(), 1).toString());
                        
                        switch (status)
                        {
                            case "Baru":
                                TBiaya.setText(poli2.getTable().getValueAt(poli2.getTable().getSelectedRow(), 2).toString());
                                break;
                            case "Lama":
                                TBiaya.setText(poli2.getTable().getValueAt(poli2.getTable().getSelectedRow(), 3).toString());
                                break;
                            default:
                                TBiaya.setText(poli2.getTable().getValueAt(poli2.getTable().getSelectedRow(), 2).toString());
                                break;
                        }

                        kdpoli.requestFocus();
                    }
                }
            }

            @Override
            public void windowIconified(WindowEvent e)
            {
            }

            @Override
            public void windowDeiconified(WindowEvent e)
            {
            }

            @Override
            public void windowActivated(WindowEvent e)
            {
            }

            @Override
            public void windowDeactivated(WindowEvent e)
            {
            }
        });
    }
    
    private void simpan()
    {
        boolean b = new GQuery()
                .a("INSERT INTO konsul_poli (no_rawat, kd_dokter, kd_poli) VALUES ('{no_rw}', '{kd_dokter}', '{kd_poli}')")
                .set("no_rw", noRw)
                .set("kd_dokter", kddokter.getText())
                .set("kd_poli", kdpoli.getText())
                .insert();
        
        if (b)
        {
            dispose();
        }
    }
}
